# i18n-tasks finds and manages missing and unused translations: https://github.com/glebm/i18n-tasks

# The "main" locale.
base_locale: en
## All available locales are inferred from the data by default. Alternatively, specify them explicitly:
# locales: [es, fr]
## Reporting locale, default: en. Available: en, ru.
# internal_locale: en

# Read and write translations.
data:
  ## Translations are read from the file system. Supported format: YAML, JSON.
  ## Provide a custom adapter:
  # adapter: I18n::Tasks::Data::FileSystem
  # file_system is the default adapter, you can provide a custom class name here:

  # Locale files or `File.find` patterns where translations are read from:
  read:
    ## Default:
    - config/locales/%{locale}.yml
    ## More files:
    - config/locales/*.%{locale}.yml
    - config/locales/*/%{locale}.yml
    ## Another gem (replace %#= with %=):
    # - "<%#= %x[bundle show vagrant].chomp %>/templates/locales/%{locale}.yml"

  # Locale files to write new keys to, based on a list of key pattern => file rules. Matched from top to bottom:
  # `i18n-tasks normalize -p` will force move the keys according to these rules
  write:
    ## For example, write devise and simple form keys (and others) to their respective files:
    - ['{activerecord,actions,devise,enumerize,errors,flash,simple_form,validates_timeliness,layouts}.*', 'config/locales/\1/%{locale}.yml']
    ## Catch-all default:
    - config/locales/%{locale}.yml

  ## Specify the router (see Readme for details). Valid values: conservative_router, pattern_router, or a custom class.
  # router: conservative_router

  yaml:
    write:
      # do not wrap lines at 80 characters
      line_width: -1

  ## Pretty-print JSON:
  # json:
  #   write:
  #     indent: '  '
  #     space: ' '
  #     object_nl: "\n"
  #     array_nl: "\n"

# Find translate calls
search:
  ## Paths or `File.find` patterns to search in:
  paths:
    - app/
    - vendor/
    - config/

  ## Root directories for relative keys resolution.
  relative_roots:
    - app/views

  ## Files or `File.fnmatch` patterns to exclude from search. Some files are always excluded regardless of this setting:
  ##   %w(*.jpg *.png *.gif *.svg *.ico *.eot *.otf *.ttf *.woff *.woff2 *.pdf *.css *.sass *.scss *.less *.yml *.json)
  exclude:
    - app/helpers/page_title_and_headline_helper.rb
    - app/assets/images
    - app/assets/fonts

  ## Alternatively, the only files or `File.fnmatch patterns` to search in `paths`:
  ## If specified, this settings takes priority over `exclude`, but `exclude` still applies.
  # include: ["*.rb", "*.html.slim"]

  ## Default scanner finds t() and I18n.t() calls.
  # scanner: I18n::Tasks::Scanners::PatternWithScopeScanner

## Google Translate
# translation:
#   # Get an API key and set billing info at https://code.google.com/apis/console to use Google Translate
#   api_key: "AbC-dEf5"

## Do not consider these keys missing:
# ignore_missing:
# - 'errors.messages.{accepted,blank,invalid,too_short,too_long}'
# - '{devise,simple_form}.*'

## Consider these keys used:
ignore_unused:
  - activerecord.*
  - actions.*
  - devise.*
  - enumerize.*
  - errors.*
  - 'false'
  - flash.*
  - simple_form.*
  - 'true'
  - validates_timeliness.*
  - app.name

## Exclude these keys from the `i18n-tasks eq-base' report:
ignore_eq_base:
  all:
    - '*'

## Ignore these keys completely:
ignore:
  - kaminari.*
  - ransack.*

ignore_models:
  names:
    - application_record
    - role
    - paper_trail/version
  attributes:
    image:
      - lock_version
    page:
      - lock_version
    user:
      - encrypted_password
      - reset_password_token
      - reset_password_sent_at
      - remember_created_at
      - unconfirmed_email
      - confirmation_token
      - confirmation_sent_at
      - unlock_token
      - sign_in_count
      - lock_version
